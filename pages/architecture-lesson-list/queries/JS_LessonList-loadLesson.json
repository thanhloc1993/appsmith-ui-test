{
  "pluginType": "JS",
  "pluginId": "js-plugin",
  "unpublishedAction": {
    "name": "loadLesson",
    "fullyQualifiedName": "JS_LessonList.loadLesson",
    "datasource": {
      "name": "UNUSED_DATASOURCE",
      "pluginId": "js-plugin",
      "messages": [],
      "isAutoGenerated": false,
      "deleted": false,
      "policies": [],
      "userPermissions": []
    },
    "pageId": "architecture-lesson-list",
    "collectionId": "architecture-lesson-list_JS_LessonList",
    "actionConfiguration": {
      "timeoutInMillisecond": 10000,
      "paginationType": "NONE",
      "encodeParamsToggle": true,
      "body": "async () => {\n  storeValue(\"isLoading\", true);\n  const lessons = tab_lesson.selectedTab === 'Future Lesson' ? await Architecture_Future_Lessons.run({\n    limit: 10,\n    offset: table_future_lesson.pageOffset,\n    time: moment().startOf('day').format('YYYY-MM-DD')\n  }) : await Architecture_Past_Lessons.run({\n    limit: 10,\n    offset: table_past_lesson.pageOffset,\n    time: moment().startOf('day').format('YYYY-MM-DD')\n  });\n  if (lessons.data) {\n    if (tab_lesson.selectedTab === 'Future Lesson') {\n      storeValue(\"futureLessons\", lessons.data.lessons, false);\n      storeValue(\"futureTotalLesson\", lessons.data.lessons_aggregate.aggregate.count, false);\n    } else {\n      storeValue(\"pastLessons\", lessons.data.lessons, false);\n      storeValue(\"pastTotalLesson\", lessons.data.lessons_aggregate.aggregate.count, false);\n    }\n  }\n  storeValue(\"isLoading\", false);\n  return true;\n}",
      "selfReferencingDataPaths": [],
      "jsArguments": [],
      "isAsync": true
    },
    "executeOnLoad": true,
    "clientSideExecution": true,
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "isValid": true,
    "invalids": [],
    "messages": [],
    "jsonPathKeys": [
      "async () => {\n  storeValue(\"isLoading\", true);\n  const lessons = tab_lesson.selectedTab === 'Future Lesson' ? await Architecture_Future_Lessons.run({\n    limit: 10,\n    offset: table_future_lesson.pageOffset,\n    time: moment().startOf('day').format('YYYY-MM-DD')\n  }) : await Architecture_Past_Lessons.run({\n    limit: 10,\n    offset: table_past_lesson.pageOffset,\n    time: moment().startOf('day').format('YYYY-MM-DD')\n  });\n  if (lessons.data) {\n    if (tab_lesson.selectedTab === 'Future Lesson') {\n      storeValue(\"futureLessons\", lessons.data.lessons, false);\n      storeValue(\"futureTotalLesson\", lessons.data.lessons_aggregate.aggregate.count, false);\n    } else {\n      storeValue(\"pastLessons\", lessons.data.lessons, false);\n      storeValue(\"pastTotalLesson\", lessons.data.lessons_aggregate.aggregate.count, false);\n    }\n  }\n  storeValue(\"isLoading\", false);\n  return true;\n}"
    ],
    "userSetOnLoad": true,
    "confirmBeforeExecute": false,
    "policies": [],
    "userPermissions": []
  },
  "id": "architecture-lesson-list_JS_LessonList.loadLesson",
  "deleted": false,
  "gitSyncId": "6385e81eae597f4a7a4e81fd_6386afb1ae597f4a7a4e8222"
}