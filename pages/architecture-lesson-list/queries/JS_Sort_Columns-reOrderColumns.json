{
  "pluginType": "JS",
  "pluginId": "js-plugin",
  "unpublishedAction": {
    "name": "reOrderColumns",
    "fullyQualifiedName": "JS_Sort_Columns.reOrderColumns",
    "datasource": {
      "name": "UNUSED_DATASOURCE",
      "pluginId": "js-plugin",
      "messages": [],
      "isAutoGenerated": false,
      "deleted": false,
      "policies": [],
      "userPermissions": []
    },
    "pageId": "architecture-lesson-list",
    "collectionId": "architecture-lesson-list_JS_Sort_Columns",
    "actionConfiguration": {
      "timeoutInMillisecond": 10000,
      "paginationType": "NONE",
      "encodeParamsToggle": true,
      "body": "async (index, kind = 'down') => {\n  console.log(index);\n  let reOrder = {\n    \"\": true\n  };\n  let currentColumns = table_edit_order.tableData;\n  if (kind == 'down') {\n    [currentColumns[index], currentColumns[index + 1]] = [currentColumns[index + 1], currentColumns[index]];\n  } else {\n    [currentColumns[index], currentColumns[index - 1]] = [currentColumns[index - 1], currentColumns[index]];\n  }\n  for (let i = 0; i < currentColumns.length; i++) {\n    reOrder[currentColumns[i].Column] = currentColumns[i].Visible;\n  }\n  await storeValue(\"lessonColumns\", reOrder);\n  JS_Sort_Columns.convertLessonCols(reOrder);\n  return true;\n}",
      "selfReferencingDataPaths": [],
      "jsArguments": [
        {},
        {}
      ],
      "isAsync": true
    },
    "executeOnLoad": false,
    "dynamicBindingPathList": [
      {
        "key": "body"
      }
    ],
    "isValid": true,
    "invalids": [],
    "messages": [],
    "jsonPathKeys": [
      "async (index, kind = 'down') => {\n  console.log(index);\n  let reOrder = {\n    \"\": true\n  };\n  let currentColumns = table_edit_order.tableData;\n  if (kind == 'down') {\n    [currentColumns[index], currentColumns[index + 1]] = [currentColumns[index + 1], currentColumns[index]];\n  } else {\n    [currentColumns[index], currentColumns[index - 1]] = [currentColumns[index - 1], currentColumns[index]];\n  }\n  for (let i = 0; i < currentColumns.length; i++) {\n    reOrder[currentColumns[i].Column] = currentColumns[i].Visible;\n  }\n  await storeValue(\"lessonColumns\", reOrder);\n  JS_Sort_Columns.convertLessonCols(reOrder);\n  return true;\n}"
    ],
    "userSetOnLoad": false,
    "confirmBeforeExecute": false,
    "policies": [],
    "userPermissions": []
  },
  "id": "architecture-lesson-list_JS_Sort_Columns.reOrderColumns",
  "deleted": false,
  "gitSyncId": "6385e81eae597f4a7a4e81fd_638801d14e462026e4cc64b9"
}