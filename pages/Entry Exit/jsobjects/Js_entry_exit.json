{
  "unpublishedCollection": {
    "name": "Js_entry_exit",
    "pageId": "Entry Exit",
    "pluginId": "js-plugin",
    "pluginType": "JS",
    "actions": [],
    "archivedActions": [],
    "body": "export default {\n\tscanQrcode: async () => {\n\t\tconsole.log(qr_code.value);\n\t\t//use async-await or promises\n\t\tconst student = await Verify_user.run(\n\t\t\t{\n\t\t\t\t\"student_id\": qr_code.value\n\t\t\t}\n\t\t);\n\t\tif (student.length == 0) {\n\t\t\tshowAlert(\"QR code invalid\");\n\t\t\treturn false;\n\t\t}\n\t\tconst lastCheckin = await Get_last_checkin.run(\n\t\t\t{\n\t\t\t\t\"student_id\": qr_code.value\n\t\t\t}\n\t\t);\n\t\tlet type = \"entry\";\n\t\tif (lastCheckin.length > 0) {\n\t\t\ttype = lastCheckin[0].exit_at ? \"entry\": \"exit\";\n\t\t}\n\t\tconsole.log(\t{\n\t\t\t\t\"entryexit_id\": self.crypto.randomUUID(),\n\t\t\t\t\"student_id\": qr_code.value,\n\t\t\t\t\"entry_at\": type == \"entry\" ? moment().format(\"YYYY-MM-DD HH:mm:ss\") : null,\n\t\t\t\t\"exit_at\": type == \"exit\" ? moment().format(\"YYYY-MM-DD HH:mm:ss\") : null,\n\t\t\t});\n\t\tconst data = await Add_entry_exit.run(\n\t\t\t{\n\t\t\t\t\"entryexit_id\": self.crypto.randomUUID(),\n\t\t\t\t\"student_id\": qr_code.value,\n\t\t\t\t\"entry_at\": type == \"entry\" ? moment().format(\"YYYY-MM-DD HH:mm:ss\") : null,\n\t\t\t\t\"exit_at\": type == \"exit\" ? moment().format(\"YYYY-MM-DD HH:mm:ss\") : null,\n\t\t\t}\n\t\t);\n\t\tshowAlert(`${type} successfully!`);\n\t\t\n\t\treturn true;\n\t}\n}",
    "variables": [],
    "userPermissions": []
  },
  "id": "Entry Exit_Js_entry_exit",
  "deleted": false,
  "gitSyncId": "63bfcc1f0a83662b10b21f8c_63bfd2330a83662b10b21f9d"
}